'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPosition = getPosition;
exports.default = geoMiddleware;
/*
 * Constants
 */
var NOT_SUPPORTED = 0;

/*
 * Action types
 */
var GET_POSITION = 'EFFECT_GEO_GET_POSITION';

/*
 * Action creators
 */
function getPosition(options) {
  return {
    type: GET_POSITION,
    payload: {
      options: options
    }
  };
}

/*
 * Middleware
 */
function geoMiddleware() {
  var navigator = typeof window !== 'undefined' ? window.navigator : null;

  return function (_ref) {
    var dispatch = _ref.dispatch;
    return function (next) {
      return function (action) {
        if (action.type !== GET_POSITION) {
          return next(action);
        }

        if (!navigator || !navigator.geolocation) {
          return Promise.reject(Object.assign(new Error('geo location API is not supported'), { code: NOT_SUPPORTED }));
        }

        var options = action.payload.options;

        return new Promise(function (resolve, reject) {
          navigator.geolocation.getCurrentPosition(resolve, reject, options);
        });
      };
    };
  };
}